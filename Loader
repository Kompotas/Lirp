local Key = loadstring(game:HttpGet('https://pastebin.com/raw/tAT3zpGg'))()

if Key.DeveloperKey ~= true then
    print("Key Doesn't Exist.")
    return
end

local library = loadstring(game:HttpGet('https://raw.githubusercontent.com/Kompotas/Lirp/refs/heads/main/Libary'))()

-- // Window \\ --
local window = library.new('Dirp | 12/8/2024', 'Ihatecow')

-- // Tabs \\ --
local tab = window.new_tab('rbxassetid://4483345998')
local tab1 = window.new_tab('rbxassetid://4483345998')
local tab2 = window.new_tab('rbxassetid://4483345998')

-- // Sections \\ --
local section = tab.new_section('Aimbot')
local section1 = tab.new_section('ESP')
local section2 = tab1.new_section('World')
local section3 = tab2.new_section('Settings')

-- // Sector \\ --
local sector = section.new_sector('Aimbot', 'Left')
local sector1 = section.new_sector('Misc', 'Right')
local sector6 = section.new_sector('Gun Mods', 'Right')
local sector2 = section1.new_sector('Player ESP', 'Left')
local sector3 = section1.new_sector('Other ESP', 'Right')
local sector7 = section1.new_sector('Visual', 'Left')
local sector4 = section2.new_sector('World', 'Left')
local sector5 = section3.new_sector('Config', 'Left')

-- // Elements \\ -- (Type, Name, State, Callback)
local AimbotCFG = loadstring(game:HttpGet('https://raw.githubusercontent.com/Kompotas/Lirp/refs/heads/main/Main'))() 
local ESP = loadstring(game:HttpGet("https://pastebin.com/raw/prbsYw7k"))()

local Toggle = sector.element('Toggle', 'Aimbot', false, function(Value)
    AimbotCFG.MasterAimbot = Value.Toggle
end)

Toggle:add_keybind("None", function(Value)
    if Value.Active then
        AimbotCFG.AimbotEnabled = true
    else
        AimbotCFG.AimbotEnabled = false
        AimbotCFG.LastTarget = nil
    end
end)

local Toggle = sector.element('Toggle', 'Target AI', false, function(Value)
    AimbotCFG.AiAimbot = Value.Toggle
end)

local Slider = sector.element('Slider', 'Aimbot Smoothnes', {default = {min = 1, max = 50, default = 1}}, function(Value)
    AimbotCFG.Smoothness = Value.Slider
end)

local Dropdown = sector.element('Dropdown', 'Aim Part', {options = {'Head', 'UpperTorso', 'LowerTorso'}}, function(Value)
   AimbotCFG.AimPart = Value.Dropdown
end)

local Toggle = sector.element('Toggle', 'Prediction', false, function(Value)
    AimbotCFG.Prediction = Value.Toggle
end)

local Toggle = sector.element('Toggle', 'Trigger Bot', false, function(Value)
    AimbotCFG.TriggerBot = Value.Toggle
end)

local Toggle = sector.element('Toggle', 'Wall Check', false, function(Value)
    AimbotCFG.WallCheck = Value.Toggle
end)

local Toggle = sector.element('Toggle', 'Show Aimbot Target', false, function(Value)
    AimbotCFG.ShowTarget = Value.Toggle
end)

Toggle:add_color({Color = Color3.new(1, 0, 0)}, nil, function(Value)
   AimbotCFG.TextLabel.TextColor3 = Value.Color
end)

local Toggle = sector.element('Toggle', 'Fov', false, function(Value)
    AimbotCFG.Visible = Value.Toggle
end)

Toggle:add_color({Color = Color3.fromRGB(129, 210, 255)}, nil, function(Value)
   AimbotCFG.FOVCircle.Color = Value.Color
end)

local Slider = sector.element('Slider', 'Fov Radius', {default = {min = 1, max = 720, default = 100}}, function(Value)
    AimbotCFG.Fov = Value.Slider
    AimbotCFG.FOVCircle.Radius = Value.Slider 
end)

local Slider = sector.element('Slider', 'Fov Thickness', {default = {min = 1, max = 25, default = 3}}, function(Value)
    AimbotCFG.FOVCircle.Thickness = Value.Slider 
end)

local slider = sector.element('Slider', 'Fov Transparency', {default = {min = 0, max = 100, default = 50}}, function(Value)
    AimbotCFG.FOVCircle.Transparency = Value.Slider / 100
end)

local Toggle = sector1.element('Toggle', 'OmniSprint', false, function(Value)
    AimbotCFG.OmniSprint = Value.Toggle
end)

local Player = game.Players.LocalPlayer

local SpeedHackActive = false
local Speed = 30 / 25

local Toggle = sector1.element('Toggle', 'Speed Hack', false, function(Value)
    SpeedHackActive = Value.Toggle
end)

Toggle:add_keybind("None", function(Value)
    while Value.Active and SpeedHackActive do
        local HumanoidRootPart = Player.Character:FindFirstChild("HumanoidRootPart")
        if HumanoidRootPart then
            HumanoidRootPart.CFrame = HumanoidRootPart.CFrame + HumanoidRootPart.CFrame.LookVector * Speed / 15
        end
        task.wait(0.0125)
    end
end)

local Slider = sector1.element('Slider', 'Speed Hack Speed', {default = {min = 5, max = 30, default = 30}}, function(Value)
    Speed = Value.Slider / 25
end)

local BunnyHopActive = false
local Toggle = sector1.element('Toggle', 'Bunny Hop', false, function(Value)
    BunnyHopActive = Value.Toggle
end)

Toggle:add_keybind("None", function(Value)
    if Value.Active and BunnyHopActive then
        AimbotCFG.Bunnyhop = true
        Bhop()
    elseif not Value.Active then
        AimbotCFG.Bunnyhop = false
    end
end)

local slider = sector1.element('Slider', 'Bunny Hop Power', {default = {min = 5, max = 28, default = 28}}, function(Value)
    AimbotCFG.BunnyPower = Value.Slider 
end)

local Toggle = sector6.element('Toggle', 'No Recoil | Instant Mosin', false, function(Value)
    NoRecoil(Value.Toggle)
end)

ESP.Enabled = false
ESP.BoxType = "Corner Box Esp"

local Toggle = sector2.element('Toggle', 'ESP', false, function(Value)
    ESP.Enabled = Value.Toggle
end)

local Toggle = sector2.element('Toggle', 'ESP NameTag', false, function(Value)
    ESP.ShowName = Value.Toggle
end)

Toggle:add_color({Color = Color3.fromRGB(ESP.NameColor)}, nil, function(Value)
   ESP.NameColor = Value.Color
end)

local Toggle = sector2.element('Toggle', 'ESP Health Bar', false, function(Value)
    ESP.ShowHealth = Value.Toggle
end)

Toggle:add_color({Color = Color3.fromRGB(ESP.HealthHighColor)}, nil, function(Value)
   ESP.HealthHighColor = Value.Color
end)

local Toggle = sector2.element('Toggle', 'ESP Distance', false, function(Value)
    ESP.ShowDistance = Value.Toggle
end)

local Toggle = sector2.element('Toggle', 'ESP Skeletons (Buggy)', false, function(Value)
    ESP.ShowSkeletons = Value.Toggle
end)

Toggle:add_color({Color = Color3.fromRGB(ESP.SkeletonsColor)}, nil, function(Value)
   ESP.SkeletonsColor = Value.Color
end)

local Toggle = sector2.element('Toggle', 'ESP Box', false, function(Value)
    ESP.ShowBox = Value.Toggle
end)

Toggle:add_color({Color = Color3.fromRGB(ESP.BoxColor)}, nil, function(Value)
   ESP.BoxColor = Value.Color
end)

local Toggle = sector3.element('Toggle', 'Dropped Items ESP', false, function(Value)
    AimbotCFG.DroppedItemESP = Value.Toggle
    DroppedItems(Value.Toggle)
end)

Toggle:add_color({Color = Color3.fromRGB(255, 255, 25)}, nil, function(Value)
    AimbotCFG.DroppedItemColor = Value.Color
    DroppedItems(false)
    DroppedItems(true)
end)

local Toggle = sector3.element('Toggle', 'Corpse ESP', false, function(Value)
    AimbotCFG.CorpseESP = Value.Toggle
    if Value.Toggle then
        DroppedItems("Humanoid")
    else
        DroppedItems("HumanoidRemove")
    end
end)

Toggle:add_color({Color = Color3.fromRGB(255, 55, 0)}, nil, function(Value)
    AimbotCFG.CorpseColor = Value.Color
    if AimbotCFG.CorpseESP == true then
        DroppedItems("HumanoidRemove")
        DroppedItems("Humanoid")
    end
end)

local ContainerVar = false
local Toggle = sector3.element('Toggle', 'Container ESP', false, function(Value)
    ContainerVar = Value.Toggle
    Container(Value.Toggle)
end)

Toggle:add_color({Color = Color3.fromRGB(75, 150, 90)}, nil, function(Value)
    AimbotCFG.ContainerColor = Value.Color
    if ContainerVar then
        Container(false)
        Container(true)
    end
end)

local ExitESPVar = false

local Toggle = sector3.element('Toggle', 'Exit ESP', false, function(Value)
    ExitESPVar = Value.Toggle
    Exit(Value.Toggle)
end)

Toggle:add_color({Color = Color3.fromRGB(155, 0, 150)}, nil, function(Value)
    AimbotCFG.ExitColor = Value.Color
    if ExitESPVar == true then
        Exit(false)
        Exit(true)
    end
end)

local Toggle = sector3.element('Toggle', 'Ai Nametag ESP', false, function(Value)
    AimbotCFG.NpcNameTag = Value.Toggle
    if AimbotCFG.NpcNameTag == true then
        NpcESP(true)
    else
        NpcESP("NameTag")
    end
end)

Toggle:add_color({Color = Color3.fromRGB(155, 90, 75)}, nil, function(Value)
    AimbotCFG.NpcColor = Value.Color
    if AimbotCFG.NpcNameTag == true then
        NpcESP("NameTag")
        NpcESP(true)
    end
end)

local Toggle = sector3.element('Toggle', 'Ai Chams ESP', false, function(Value)
    AimbotCFG.NpcHighlight = Value.Toggle
    
    if AimbotCFG.NpcHighlight == true then
        NpcESP(true)
    else
        NpcESP("Highlight")
    end
end)

Toggle:add_color({Color = Color3.fromRGB(20, 90, 75)}, nil, function(Value)
    AimbotCFG.NpcHighlightColor = Value.Color
    
    if AimbotCFG.NpcHighlight == true then
        NpcESP("Highlight")
        NpcESP(true)
    end
end)

local Button = sector4.element('Button', 'Remove Foliage (Might Lag)', false, function(Value)
    local Foliage = game.Workspace.SpawnerZones:FindFirstChild("Foliage")
    if Foliage then
        Foliage:Destroy()
    end   
end)

local Button = sector4.element('Button', 'Remove Outpost Landmines', false, function(Value)
    for _, Landmine in pairs(workspace.AiZones.OutpostLandmines:GetChildren()) do
        if Landmine and Landmine.Name == "PMN2" then
            Landmine:Destroy()
        end
    end   
end)

local Toggle = sector4.element('Toggle', 'Full Brightness)', false, function(Value)
    FullBrightness(Value.Toggle)
end)

local Toggle = sector7.element('Toggle', 'Inventory Checker', false, function(Value)
    AimbotCFG.InvChecker = Value.Toggle
end)

Toggle:add_keybind("None", function(Value)
    AimbotCFG.InvCheckerActive = Value.Active
end)

local ConfigName = "Default"
local Button = sector5.element('TextBox', 'Enter Config Name', false, function(Value)
    ConfigName = Value.Text
end)

local Button = sector5.element('Button', 'Save Config', false, function(Value)
    window.save_cfg(ConfigName)
end)

local Button = sector5.element('Button', 'Load Config', false, function(Value)
    window.load_cfg(ConfigName)
end)

window.on_load_cfg:Connect(function()
    print("Configuration has been loaded!")
end)
